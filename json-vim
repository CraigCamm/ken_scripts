#!/bin/bash
# Script to allow human readable editing of redis data.
# By Ken Mitchner
function decode_file()
{
    TAB='    '
    FILE=$1
    sed -i -e 's/\([{[]\)/\1\n/g;s/\([]}]\)/\n\1/g;s/,/,\n/g;' $FILE
    depth=0
    linenum=0
    while read line
    do
        linenum=$(($linenum+1))
        if [[ $line =~ []}]  ]]
        then
            depth=$(($depth-1))
        fi
        tabs=$(for (( i=0; i < $depth; i++ )); do printf "%s" "$TAB"; done)
        sed -i -e "${linenum}s/^/$tabs/g" $FILE
        if [[ $line =~ [[{] ]]
        then
            depth=$(($depth+1))
        fi
    done < "$FILE"
}

function encode_file()
{
    FILE=$1
    sed -i -e 's/^[ \t]*//g;' $FILE
    sed -i -e ':a;N;$!ba;s/\n//g' $FILE
    isstr=0
    len=$(cat $FILE | wc -m)
    data=$(cat $FILE)
    for (( i=0; i < $len; i++ ))
    do
        char=${data:$i:1}
        if [ "$char" == '"' ] ; then
            if [ $isstr -eq 1 ] ; then isstr=0 ; else isstr=1 ; fi
        elif [ $isstr -eq 0 -a "$char" == " "  ] ; then
            data="${data:0:$i}${data:$(($i+1))}"
            i=$(($i-1))
        fi
    done
    echo -n "$data" >$FILE
}

if [ -a $1 ] ; then
    FILE=$1
else
    TMPFILE=$(mktemp /tmp/XXXXXXXXXX.json)
    FILE=$TMPFILE
    echo -n ${*:1} >$FILE
fi

decode_file $FILE
vim $FILE
encode_file $FILE
cat $FILE

if [ -n $TMPFILE ] ; then
    rm $TMPFILE
fi
